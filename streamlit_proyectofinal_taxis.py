import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

st.set_page_config(page_title="Taxis Ambientalmente Amigables en Nueva York")

# T√≠tulo
st.title("Implementaci√≥n de Veh√≠culos Ambientalmente Amigables en Nueva York")

# Descripci√≥n general
st.header("üåç Descripci√≥n General")
st.write("""
Este proyecto tiene como finalidad asesorar a una empresa de transporte de pasajeros en la evaluaci√≥n y viabilidad de implementar una nueva flota de taxis ambientalmente amigables en la ciudad de Nueva York...
""")

# Objetivos del Proyecto
st.header("üéØ Objetivos del Proyecto")
st.write("""
1. **An√°lisis de Patrones de Movilidad y Demanda en Zonas Estrat√©gicas**: Identificar zonas y horarios de alta demanda y optimizar la operaci√≥n de la flota.
2. **Determinaci√≥n de Zonas √ìptimas para Operaciones Sostenibles**: Desarrollar un sistema de recomendaci√≥n que combine rentabilidad y sostenibilidad.
3. **Generaci√≥n de Informes para Decisiones Estrat√©gicas**: Crear informes detallados que faciliten la toma de decisiones informada.
""")

# Equipo del Proyecto
st.header("üë• Equipo del Proyecto")
data_equipo = {
    "Nombre": ["Vera Guillen", "Gustavo Coello", "Alberto Bernal", "Camilo Casilimas"],
    "Cargo": ["Analista de Datos", "Ingeniero de Datos", "Cient√≠fico de Datos", "Cient√≠fico de Datos"]
}
df_equipo = pd.DataFrame(data_equipo)
st.dataframe(df_equipo)

# Sistema de Recomendaci√≥n
st.header("üß† Sistema de Recomendaci√≥n")
st.write("""
Desarrollaremos un sistema de recomendaci√≥n basado en datos hist√≥ricos desde enero de 2023 hasta agosto de 2024. Este sistema incluir√°:
- Recomendaciones en tiempo real para conductores.
- An√°lisis de datos hist√≥ricos por hora, d√≠a de la semana y mes.
- Muestra inicial de 50 veh√≠culos.
- Per√≠odo de evaluaci√≥n de 4 meses.
""")

# Indicadores Clave de Rendimiento (KPI)
st.header("üìà Indicadores Clave de Rendimiento (KPI)")
st.write("""
1. **N√∫mero de Viajes por Zona y Hora**: Mide el n√∫mero total de viajes iniciados en cada zona y hora del d√≠a.
2. **Ingresos Totales por Zona**: Mide el total de ingresos generados en cada zona de recogida.
3. **Duraci√≥n Promedio del Viaje por Zona**: Mide la duraci√≥n promedio de los viajes iniciados en cada zona.
""")

# Cronograma de Trabajo
st.header("üóìÔ∏è Cronograma de Trabajo")
data_timeline = {
    "Fase": ["Recopilaci√≥n de Datos", "Preparaci√≥n de Datos", "An√°lisis Exploratorio", "Modelado Predictivo", "Optimizaci√≥n de Rutas", "Generaci√≥n de Informes"],
    "Duraci√≥n": ["2 d√≠as", "4 d√≠as", "3 d√≠as", "5 d√≠as", "3 d√≠as", "1 d√≠a"],
    "Fechas": ["4-5 Nov 2024", "6-9 Nov 2024", "10-12 Nov 2024", "13-17 Nov 2024", "18-20 Nov 2024", "21 Nov 2024"]
}
df_timeline = pd.DataFrame(data_timeline)
st.dataframe(df_timeline)

# Herramientas y Tecnolog√≠as
st.header("üõ†Ô∏è Herramientas y Tecnolog√≠as")
data_herramientas = {
    "Categor√≠a": ["An√°lisis de Datos", "Visualizaci√≥n", "Machine Learning", "Pipeline de Datos", "Colaboraci√≥n y Gesti√≥n"],
    "Herramientas": ["Python (Pandas, NumPy), SQL, Jupyter Notebooks", "Matplotlib, Seaborn, Tableau", "Scikit-learn, TensorFlow", "AWS S3, AWS Lambda, MySQL en AWS RDS", "GitHub, Slack, Trello, Microsoft Teams"]
}
df_herramientas = pd.DataFrame(data_herramientas)
st.dataframe(df_herramientas)

# Riesgos y Mitigaci√≥n
st.header("‚ö†Ô∏è Riesgos y Mitigaci√≥n")
data_riesgos = {
    "Riesgo": ["Retrasos en datos", "Inconsistencias", "Cambios en requerimientos"],
    "Estrategia de Mitigaci√≥n": ["Identificar fuentes alternativas", "Implementar validaciones rigurosas", "Mantener comunicaci√≥n con PO"]
}
df_riesgos = pd.DataFrame(data_riesgos)
st.dataframe(df_riesgos)

# Contacto
st.header("üì¨ Contacto")
st.write("""
- Vera Guillen - Analista de Datos.
- Gustavo Coello - LinkedIn.
- Alberto Bernal - LinkedIn.
- Camilo Casilimas - LinkedIn.
""")

# C√≥mo Contribuir
st.header("ü§ù C√≥mo Contribuir")
st.write("""
Clona el repositorio:
""")
